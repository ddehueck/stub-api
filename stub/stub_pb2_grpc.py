# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import stub_pb2 as stub__pb2


class StubStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Info = channel.unary_unary(
        '/stub.Stub/Info',
        request_serializer=stub__pb2.Empty.SerializeToString,
        response_deserializer=stub__pb2.InfoResponse.FromString,
        )


class StubServicer(object):
  """Interface exported by the server.
  """

  def Info(self, request, context):
    """Obtains API Info.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StubServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Info': grpc.unary_unary_rpc_method_handler(
          servicer.Info,
          request_deserializer=stub__pb2.Empty.FromString,
          response_serializer=stub__pb2.InfoResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'stub.Stub', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
